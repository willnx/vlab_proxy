user  nginx;
worker_processes  1;

error_log  /var/log/nginx/error.log debug;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/json;
    access_log          off;
    sendfile            on;
    keepalive_timeout   65;

    # This section is all the backend services that will be layer-7 routed to
    upstream auth {
      server auth-api:5000;
    }
    upstream link {
      server link-api:5000;
    }
    upstream vlan {
      server vlan-api:5000;
    }
    upstream gateway {
      server gateway-api:5000;
    }
    upstream power {
      server power-api:5000;
    }
    upstream inventory {
      server inventory-api:5000;
    }
    upstream jumpbox {
      server jumpbox-api:5000;
    }
    upstream onefs {
      server onefs-api:5000;
    }
    upstream insightiq {
      server insightiq-api:5000;
    }
    upstream esrs {
      server esrs-api:5000;
    }
    upstream cee {
      server cee-api:5000;
    }
    upstream docs {
      server docs:80;
    }
    upstream router {
      server router-api:5000;
    }
    upstream windows {
      server windows-api:5000;
    }
    upstream winserver {
      server winserver-api:5000;
    }
    upstream centos {
      server centos-api:5000;
    }

    # Redirect "all the things" to HTTPS
    server {
      listen 80 default_server;
      server_name _;
      return 301 https://$host$request_uri;
    }

    server {
      # This section defines the TLS settings
      listen 443 ssl;
      ssl_certificate     /etc/ssl/server.crt;
      ssl_certificate_key /etc/ssl/server.key;
      ssl_protocols TLSv1.2;
      ssl_ciphers   HIGH:!aNULL:!MD5;
      large_client_header_buffers 4 16k;

      # If a backend is down, nginx will either know, or timeout.
      # Either way, we should be restarting it, so mask as 503
      error_page 502 /502.html;
      location /502.html{
        return 503 '{"error": "service unavailable"}';
      }
      error_page 503 /503.html;
      location /503.html{
        return 503 '{"error": "service unavailable"}';
      }
      error_page 504 /504.html;
      location /504.html{
        return 504 '{"error": "service unavailable"}';
      }

      # This section defines the layer-7 routing
      location /api/1/auth {
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_pass http://auth;
      }
      location /api/2/auth {
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_pass http://auth;
      }
      location /api/1/link {
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_pass http://link;
      }
      location /api/1/inf/vlan {
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_pass http://vlan;
      }
      location /api/1/inf/gateway {
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_pass http://gateway;
      }
      location /api/1/inf/power {
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_pass http://power;
      }
      location /api/1/inf/inventory {
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_pass http://inventory;
      }
      location /api/1/inf/jumpbox {
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_pass http://jumpbox;
      }
      location /api/1/inf/onefs {
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_pass http://onefs;
      }
      location /api/1/inf/insightiq {
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_pass http://insightiq;
      }
      location /api/1/inf/esrs {
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_pass http://esrs;
      }
      location /api/1/inf/cee {
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_pass http://cee;
      }
      location / {
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_pass http://docs;
      }
      location /api/1/inf/router {
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_pass http://router;
      }
      location /api/1/inf/windows {
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_pass http://windows;
      }
      location /api/1/inf/winserver {
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_pass http://winserver;
      }
      location /api/1/inf/centos {
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_pass http://centos;
      }
    }
}
