user  nginx;
worker_processes  1;

error_log  /var/log/nginx/error.log debug;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/json;
    access_log          off;
    sendfile            on;
    keepalive_timeout   65;

    upstream gateway {
      server api-gateway:8000;
      keepalive 100;
    }

    # Redirect "all the things" to HTTPS
    server {
      listen 80 default_server;
      server_name _;
      return 301 https://$host$request_uri;
    }

    server {
      # This section defines the TLS settings
      listen 443 ssl;
      ssl_certificate     /etc/ssl/server.crt;
      ssl_certificate_key /etc/ssl/server.key;
      ssl_protocols TLSv1.2;
      ssl_ciphers   HIGH:!aNULL:!MD5;
      large_client_header_buffers 4 16k;

      # If a backend is down, nginx will either know, or timeout.
      # Either way, we should be restarting it, so mask as 503
      error_page 502 /502.html;
      location /502.html{
        return 503 '{"error": "service unavailable"}';
      }
      error_page 503 /503.html;
      location /503.html{
        return 503 '{"error": "service unavailable"}';
      }
      error_page 504 /504.html;
      location /504.html{
        return 504 '{"error": "service unavailable"}';
      }
      location / {
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_pass http://gateway;
        proxy_http_version 1.1;
        proxy_set_header COnnection "";
      }
    }
}
